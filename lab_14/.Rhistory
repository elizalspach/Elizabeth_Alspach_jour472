#background on tidyverse: https://www.tidyverse.org/packages/
library(tidyverse)
library(janitor)
library(lubridate)
#At Home: See Appendix to load data at home from Internet
SF <- rio::import("SF_311_Jan29.xlsx", which = "SF Police_Department_Calls_for_")
head(SF)
#view(SF)
#This cleans column names
SF <- janitor::clean_names(SF)
#This processes dates for analysis
SF$call_date2 <- ymd(SF$call_date)
#This creates a new column for year
SF$year <- year(SF$call_date2)
Years <- SF %>%
count(year) %>%
group_by(year) %>%
arrange(desc(year))
head(Years)
ggplot(data=Years) +
geom_col(mapping=aes(x=year, y=n))
ggplot(data=Years) +
geom_col(mapping=aes(x=year, y=n, fill=n))
ggplot(Years,aes(x = year, y = n,
fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none")
ggplot(Years,aes(x = year, y = n,
fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
#This is your title sequence
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Rob Wells, 2-12-2022",
y="Number of Calls",
x="Year")
#Copy section of code from above...
SF %>%
count(year) %>%
group_by(year) %>%
#Sandwich it onto a simple ggplot
ggplot(aes(x = year, y = n, fill = n)) +
geom_col(position = "dodge") +
theme(legend.position = "none") +
labs(title = "311 Calls for Service By Year, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Year")
Days <- SF %>%
count(call_date2) %>%
arrange(desc(n))
head(Days)
#Adapting code from above...
SF %>%
count(call_date2) %>%
#Sandwich it onto a simple ggplot
ggplot(aes(x = call_date2, y = n, fill = n)) +
geom_bar(stat = "identity") +
labs(title = "311 Calls for Service By Day, San Francisco",
subtitle = "SF PD Service Call Data, 2016-2019",
caption = "Graphic by Wells",
y="Number of Calls",
x="Day")
SF1 <- SF %>% count(original_crime_type_name) %>%
arrange(desc(n))
head(SF1)
#view(SF1)
Action <- SF %>%
count(disposition) %>%
arrange(desc(n))
head(Action)
view(Action)
SF <- SF %>%
mutate(weekday = wday(call_date, label=TRUE, abbr=FALSE))
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday)
#grepl, your find function: searches for matches of a string, returns true or false. "grep logical"
#using the code above
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwich onto a graphic
ggplot(aes(x = weekday, y = n)) +
geom_point(aes(size = n, color = n))
#using the code above
SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwiching onto a graphic
ggplot(aes(x = weekday, y = n)) +
ylab("Arrests") +
geom_point(aes(size = n, color = n), alpha = 0.7, show.legend = FALSE) +
labs(title = "Homeless Arrests By Weekday in San Francisco",
subtitle = "SF PD Service Call Data 2017-2019: Source: SFPD",
caption = "Graphic by Wells")
#using the code above
bubble <- SF %>%
select(weekday, crime_id, disposition) %>%
filter(grepl("ARR", disposition)) %>%
count(weekday) %>%
#and sandwiching onto a graphic
ggplot(aes(x = weekday, y = n)) +
ylab("Arrests") +
xlab("") +
geom_point(aes(size = n, color = n), alpha = 0.7, show.legend = FALSE) +
scale_size_area(guide = "none", max_size = 25) +
scale_y_continuous(limits=c(0, 100)) +
labs(title = "Homeless Arrests By Weekday in San Francisco",
subtitle = "SF PD Service Call Data 2017-2019: Source: SFPD",
caption = "Graphic by Rob Wells, 2/12/2022")
bubble
ggsave("bubble.png",device = "png",width=9,height=6, dpi=800)

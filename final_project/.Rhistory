read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
View(x12_results_clean)
View(x16_results_clean)
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2")
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
View(x16_gen_results)
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
View(x12_gen_results)
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
#https://www.census.gov/programs-surveys/cbp/data/datasets.html use this instead
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
emp_carroll_clean <- employment_carroll %>%
select(industry, geography, median_earnings, median_earnings_prev, median_earnings_growth, workforce_growth) %>%
arrange(desc(median_earnings_growth))
#based on rob wells comment, clean data more + check on years breakdown
emp_carroll_clean
#This dataset describes the employment overall of Carroll County. I cleaned these names and sorted by the earnings growth, which shows some companies and enterprises have particularly grown over the past year. With this, I am looking into what the top industries in Carroll County are -- since I can't entirely answer how the Key Bridge collapse is presently affecting employees in the county, I can instead look at these enterprises and see how they might be affected in the future and/or how their exports and imports will change. Not only that, but with a crossreference of the Port of Baltimore economic impact report that says manufacturing jobs are heavily affected, I can do a more in-depth analysis in my next draft about the possible effects of the bridge collapse.
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x20_gen_results
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x16_gen_results
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_gen_results
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
emp_2021 <- read.table("cbp21co.txt", header = TRUE, sep = "\t")
emp_2021 <- read.table("cbp21st.txt", header = TRUE, sep = "\t")
emp_2021 <- janitor::clean_names()
emp_2021 <- read.table("cbp21st.txt")
View(emp_2021)
data <- read.fwf("path_to_your_file.txt", widths = c(10, 20, 5))  # Specify the widths of each field
data <- read.fwf("cbp21st.txt", widths = c(10, 20, 5))  # Specify the widths of each field
data <- janitor::clean_names(data)
data <- read.fwf("cbp21st.txt", widths = c(10, 20, 5))  # Specify the widths of each field
View(data)
data <- janitor::clean_names(data)
chunk_size <- 1000  # Define how many rows per chunk
total_rows <- 50000  # You may need to adjust this based on the actual number of rows
for (i in seq(1, total_rows, by = chunk_size)) {
chunk <- read.table("cbp21st.txt", sep = "\t", header = FALSE, nrows = chunk_size, skip = i-1)
# Process the chunk
print(nrow(chunk))  # Example action
}
View(chunk)
readr("cbp21st.txt")
install.packages(readr)
install.packages("readr")
library(readr)
readr("cbp21st.txt")
<div class="flourish-embed flourish-chart" data-src="visualisation/17783968"><script src="https://public.flourish.studio/resources/embed.js"></script></div>
cat('<iframe src="EMBED_CODE_FROM_FLOURISH" width="WIDTH" height="HEIGHT" frameborder="0" scrolling="no"></iframe>')
cat('<iframe src="<div class="flourish-embed flourish-chart" data-src="visualisation/17783968"><script src="https://public.flourish.studio/resources/embed.js"></script></div>" width="WIDTH" height="HEIGHT" frameborder="0" scrolling="no"></iframe>')
cat('<iframe src="<div class="flourish-embed flourish-chart" data-src="visualisation/17783968"><script src="https://public.flourish.studio/resources/embed.js"></script></div>"></iframe>')
library(tidyverse)
library(tidycensus)
library(rvest)
library(janitor)
library(formattable)
#census key
census_api_key("423292f0a0d4b5f0fe4ce722f283f6af07c21c84", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
#load in census data through my API
acs_vars <- load_variables("acs5", year = 2020)
#grab maryland section, divide by county by race for both 2010 and 2020. I want to get these both to see how diverse populations have changed over time in these counties.
x2020_md <- get_acs(geography = "county",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006",
hispanic = "B03002_001"),
state = "MD",
year = 2020)
x2010_md <- get_acs(geography = "county",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006",
hispanic = "B03002_001"),
state = "MD",
year = 2010)
View(x2020_md)
acs_vars <- load_variables("acs5", year = 2020)
#maryland 2020 and maryland 2010 demographics -- i can pull from the same parts of the Census API since I'm just choosing a different geographical region, such as state instead of county.
x2020_state <- get_acs(geography = "state",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006",
hispanic = "B03002_001"),
state = "MD",
year = 2020)
x2010_state <- get_acs(geography = "state",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006",
hispanic = "B03002_001"),
state = "MD",
year = 2010)
View(x2010_state)
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table, and i had to do a lot more cleaning to ensure numbers were recognized by the program.
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
#Based on this analysis with percentage, it appears that Carroll County has always skewed Republican in general elections since 2012. Interestingly enough, less of the voting population seems to have voted for the Republican candidates as the years have gone on. From a 64.8% percent voting for Romney to 63.4% for Trump in 2016 and a later 60% for Trump in 2020, support for Republican candidates has actually slightly waned. Can this be attributed to less people showing up to the polls, or some other reason? As I work in Carroll County, I'll use this analysis to inform my reporting.
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_result_md <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_001-.html" %>%
read_html() %>%
html_table()
x12_result_md <- x12_result_md[[1]]
head(x12_result_md)
View(x12_gen_results)
#pull in data from the state elections
x12_result_md <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_001-.html" %>%
read_html() %>%
html_table()
x12_result_md <- x12_result_md[[1]]
x16_result_md <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_001-.html" %>%
read_html() %>%
html_table()
x16_result_md <- x16_result_md[[1]]
x20_result_md <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_001-.html" %>%
read_html() %>%
html_table()
x20_result_md <- x20_result_md[[2]]
head(x12_result_md)
head(x16_result_md)
head(x20_result_md)
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
#Based on this analysis with percentage, it appears that Carroll County has always skewed Republican in general elections since 2012. Interestingly enough, less of the voting population seems to have voted for the Republican candidates as the years have gone on. From a 64.8% percent voting for Romney to 63.4% for Trump in 2016 and a later 60% for Trump in 2020, support for Republican candidates has actually slightly waned. Can this be attributed to less people showing up to the polls, or some other reason? As I work in Carroll County, I'll use this analysis to inform my reporting.
View(x20_gen_results)
View(x16_gen_results)
View(x12_gen_results)
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B06011_001"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B06011_001"),
state = "MD",
year = 2010)
View(x20_md_median_income)
#https://www.census.gov/programs-surveys/cbp/data/datasets.html where I grabbed my new data from
#semi-good dataframes
x2021_employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
x2015_employment_carroll <- read.csv("Occupations.csv") %>%
clean_names()
View(x2021_employment_carroll)
View(x2015_employment_carroll)
View(acs_vars)
x20_jobs_census <- get_acs(geography = "state",
variables = c(jobs="B24012_001"))
View(x20_jobs_census)
x2021_employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
x2015_employment_carroll <- read.csv("Occupations.csv") %>%
clean_names()
x2021_employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
select(occupation, median_earnings,workforce_growth)
x2015_employment_carroll <- read.csv("Occupations.csv") %>%
select(occupation, median_earnings,workforce_growth) %>%
clean_names()
#https://www.census.gov/programs-surveys/cbp/data/datasets.html where I grabbed my new data from
#Pulling up the dataframes
x2021_employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
x2015_employment_carroll <- read.csv("Occupations.csv") %>%
clean_names()
#https://datausa.io/profile/geo/carroll-county-md?growthOccupations=growth&measureOccupations=workforce where I grabbed my new data from. a lot of this is also aligned with census data
#Pulling up the dataframe
employment_carroll <- read.csv("Occupations.csv") %>%
clean_names()
employment_carroll %>%
arrange(desc(workforce_growth))
head_employment_carroll
employment_carroll %>%
select(group,subgroup,occupation,year,median_earnings,workforce_growth) %>%
arrange(desc(workforce_growth))
head_employment_carroll
employment_carroll %>%
select(group,subgroup,occupation,year,median_earnings,workforce_growth) %>%
arrange(desc(workforce_growth))
head(employment_carroll)
employment_carroll %>%
select(group,subgroup,occupation,year,median_earnings,workforce_growth) %>%
arrange(desc(workforce_growth))

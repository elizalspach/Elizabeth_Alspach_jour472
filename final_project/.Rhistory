html_table()
x16_results
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
View(x20_md_median_income)
View(x16_results)
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()[[1]]
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()[[1]]
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results[[1]]
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
emp_carroll_clean <- employment_carroll %>%
select(industry, geography, median_earnings, median_earnings_prev, median_earnings_growth, workforce_growth) %>%
arrange(desc(median_earnings_growth))
#based on rob wells comment, clean data more + check on years breakdown
#ask prof willis + prof wells about why this mightbe and see if there's another thing to do
emp_carroll_clean
#This dataset describes the employment overall of Carroll County. I cleaned these names and sorted by the earnings growth, which shows some companies and enterprises have particularly grown over the past year. With this, I am looking into what the top industries in Carroll County are -- since I can't entirely answer how the Key Bridge collapse is presently affecting employees in the county, I can instead look at these enterprises and see how they might be affected in the future and/or how their exports and imports will change. Not only that, but with a crossreference of the Port of Baltimore economic impact report that says manufacturing jobs are heavily affected, I can do a more in-depth analysis in my next draft about the possible effects of the bridge collapse.
View(employment_carroll)
View(emp_carroll_clean)
View(acs_vars)
View(emp_carroll_clean)
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table() %>%
clean_names() %>%
mutate(as.numeric)
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table() %>%
mutate(as.numeric)
x12_results <- x12_results[[1]] %>%
clean_names() %>%
mutate(as.numeric)
View(x12_results)
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table() %>%
x12_results <- x12_results[[1]]
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
View(x12_results)
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]] %>%
clean_names() %>%
mutate(as.numeric)
x12_results_clean <- x12_results %>%
mutate(as.numeric) %>%
clean_names()
x12_results_clean <- x12_results %>%
clean_names()
x12_results_clean <- x12_results %>%
as.numeric("Early Voting", "Election Day", "Absentee / Provisional", "Total", "Percentage")
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
View(x12_results_clean)
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[1]]
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x20_results <- x20_results[[1]]
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[1]]
View(x20_results)
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
View(x20_results)
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Prov. = as.numeric(gsub("[^0-9.]", "", prov.)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
View(x20_results_clean)
x20_gen_results <- x20_results_clean %>%
select(early_voting_2, election_day_2,by_mail_2,total_2,percent_2) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2",
total = "total_2",
percent = "percent_2")
x20_gen_results <- x20_results_clean %>%
select(early_voting_2, election_day_2,by_mail_2) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
View(x20_results)
View(x20_gen_results)
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
View(x12_results_clean)
View(x16_results_clean)
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2")
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
View(x16_gen_results)
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
View(x12_gen_results)
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
#https://www.census.gov/programs-surveys/cbp/data/datasets.html use this instead
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
emp_carroll_clean <- employment_carroll %>%
select(industry, geography, median_earnings, median_earnings_prev, median_earnings_growth, workforce_growth) %>%
arrange(desc(median_earnings_growth))
#based on rob wells comment, clean data more + check on years breakdown
emp_carroll_clean
#This dataset describes the employment overall of Carroll County. I cleaned these names and sorted by the earnings growth, which shows some companies and enterprises have particularly grown over the past year. With this, I am looking into what the top industries in Carroll County are -- since I can't entirely answer how the Key Bridge collapse is presently affecting employees in the county, I can instead look at these enterprises and see how they might be affected in the future and/or how their exports and imports will change. Not only that, but with a crossreference of the Port of Baltimore economic impact report that says manufacturing jobs are heavily affected, I can do a more in-depth analysis in my next draft about the possible effects of the bridge collapse.
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage") %>%
arrange(desc(percent))
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
#read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x20_results <- x20_results[[2]]
#had to do a bit more cleaning on this table -- for some reason, it recognized information above the table as an actual table
x20_results_clean <- x20_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),  # Remove non-numeric characters and convert to numeric
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
By_Mail = as.numeric(gsub("[^0-9.]", "", `By Mail`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percent = as.numeric(gsub("[^0-9.]", "", Percent))
) %>%
clean_names()
x20_gen_results <- x20_results_clean %>%
select(name, party, early_voting_2, election_day_2,by_mail_2,total,percent) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
by_mail = "by_mail_2")
x20_gen_results
x16_results <- "https://elections.maryland.gov/elections/2016/results/general/gen_results_2016_4_by_county_07-1.html" %>%   read_html() %>%
html_table()
x16_results <- x16_results[[1]]
x16_results_clean <- x16_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x16_gen_results <- x16_results_clean %>%
select(name, party, early_voting_2, election_day_2,absentee_provisional_2,total,percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x16_gen_results
x12_results <- "https://elections.maryland.gov/elections/2012/results/general/gen_results_2012_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
x12_results <- x12_results[[1]]
x12_results_clean <- x12_results %>%
mutate(
Early_Voting = as.numeric(gsub("[^0-9.]", "", `Early Voting`)),
Election_Day = as.numeric(gsub("[^0-9.]", "", `Election Day`)),
Absentee_Provisional = as.numeric(gsub("[^0-9.]", "", `Absentee / Provisional`)),
Total = as.numeric(gsub("[^0-9.]", "", Total)),
Percentage = as.numeric(gsub("[^0-9.]", "", Percentage))
) %>%
clean_names()
x12_gen_results <- x12_results_clean %>%
select(name, party, early_voting_2, election_day_2, absentee_provisional_2, total, percentage) %>%
rename(early_voting = "early_voting_2",
election_day = "election_day_2",
absentee_provisional = "absentee_provisional_2",
percent = "percentage")
x12_gen_results
#based on rob wells comment, need to convert these to dataframes and do more to combine them. will ask in class/office hours
#ask prof willis and prof wells about how to isolate specifically the general election -- want to see how voting has changed in the general elections
emp_2021 <- read.table("cbp21co.txt", header = TRUE, sep = "\t")
emp_2021 <- read.table("cbp21st.txt", header = TRUE, sep = "\t")
emp_2021 <- janitor::clean_names()
emp_2021 <- read.table("cbp21st.txt")
View(emp_2021)
data <- read.fwf("path_to_your_file.txt", widths = c(10, 20, 5))  # Specify the widths of each field
data <- read.fwf("cbp21st.txt", widths = c(10, 20, 5))  # Specify the widths of each field
data <- janitor::clean_names(data)
data <- read.fwf("cbp21st.txt", widths = c(10, 20, 5))  # Specify the widths of each field
View(data)
data <- janitor::clean_names(data)
chunk_size <- 1000  # Define how many rows per chunk
total_rows <- 50000  # You may need to adjust this based on the actual number of rows
for (i in seq(1, total_rows, by = chunk_size)) {
chunk <- read.table("cbp21st.txt", sep = "\t", header = FALSE, nrows = chunk_size, skip = i-1)
# Process the chunk
print(nrow(chunk))  # Example action
}
View(chunk)
readr("cbp21st.txt")
install.packages(readr)
install.packages("readr")
library(readr)
readr("cbp21st.txt")
<div class="flourish-embed flourish-chart" data-src="visualisation/17783968"><script src="https://public.flourish.studio/resources/embed.js"></script></div>

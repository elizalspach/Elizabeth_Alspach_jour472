#filter out other counties
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland") %>%
filter(name == "Carroll County, Maryland")
md_total <- x2020_md %>%
inner_join(x2020_md, by="GEOID") %>%
rename(estimate_2020 = estimate.x) %>%
rename(estimate_2010 = estimate.y) %>%
rename(variable = variable.x) %>%
rename(name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland") %>%
filter(name == "Carroll County, Maryland")
View(md_howard_carroll)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "GEOID") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland")
View(x2020_howard_race)
View(md_howard_carroll)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "variable") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
GEOID = GEOID.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "GEOID") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "NAME") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x) %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "NAME") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x) %>%
select(name, variable, estimate_2020, estimate_2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "NAME") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x) %>%
select(NAME, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "GEOID") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
gov_race_results <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
#read in results as html table
gov_race_results <- gov_race_results %>%
read_html() %>%
html_table()
View(gov_race_results)
gov_race_results <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"
#read in results as html table
gov_race_results <- gov_race_results %>%
read_html() %>%
html_table()
gov_race_results <- gov_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(pct_election_day) %>%
select(name, pct_election_day)
View(acs_vars)
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
View(x10_md_median_income)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID")
View(md_median_income_total)
#load in census data
acs_vars <- load_variables("acs5", year = 2020)
#grab maryland section
x2020_md <- get_acs(geography = "county",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006"),
state = "MD",
year = 2020)
x2010_md <- get_acs(geography = "county",
variables = c(white = "B02001_002",
black = "B02001_003",
american_ind = "B02001_004",
asian = "B02001_005",
pacif_islander = "B02001_006"),
state = "MD",
year = 2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = "GEOID") %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#B02001_002 -- total white alone
#B02001_003 -- total black alone
#B02001_004 -- total american indian and alaska native alone
#B02001_005 -- total asian alone
#B02001_006 -- total native hawaiian or other pacific islander alone
View(md_total)
View(x2010_md)
View(md_total)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = c("GEOID", "estimate")) %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = c("GEOID", "variable")) %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
variable = variable.x,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = c("GEOID", "variable")) %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#now want to filter out the counties! but first, i'll join the two dataframes
md_total <- x2020_md %>%
inner_join(x2010_md, by = c("GEOID", "variable")) %>%
rename(estimate_2020 = estimate.x,
estimate_2010 = estimate.y,
name = "NAME.x") %>%
select(GEOID, name, variable, estimate_2020, estimate_2010)
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100))
#filter out other counties and mutate for pct_change
md_howard_carroll <- md_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((estimate_2020-estimate_2010)/estimate_2010)*100)) %>%
arrange(desc(pct_change))
view(md_howard_carroll)
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
view(employment_carroll)
#This dataset describes the employment overall of Carroll County, and I will sort and break that down by manufacturers and farmers. I will filter out other jobs, and then also sort by median earnings and median earnings growth since this dataset has information from previous years.
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.x") %>%
view(md_median_income_total)
View(md_median_income_total)
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
view(howard_carroll_med_income)
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate,x10_estimate,variable)
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_estimate = "estimate.x",
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate-x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate - x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate - x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
#mutate(pct_change = (((x20_estimate - x10_estimate)/x10_estimate)*100)) %>%
#arrange(desc(pct_change))
view(howard_carroll_med_income)
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable)
mutate(pct_change = (((x20_estimate - x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
x20_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2020)
x10_md_median_income <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
md_median_income_total <- x20_md_median_income %>%
inner_join(x10_md_median_income, by="GEOID", "variable") %>%
rename(name = "NAME.x",
x20_estimate = "estimate.x",
x10_estimate = "estimate.y",
variable = "variable.x")
howard_carroll_med_income <- md_median_income_total %>%
filter(name == "Howard County, Maryland" | name == "Carroll County, Maryland") %>%
select(name, x20_estimate, x10_estimate, variable) %>%
mutate(pct_change = (((x20_estimate - x10_estimate)/x10_estimate)*100)) %>%
arrange(desc(pct_change))
view(howard_carroll_med_income)
pres_race_results <- "https://elections.maryland.gov/elections/2020/results/General/index.html"
#read in results as html table
pres_race_results <- pres_race_results %>%
read_html() %>%
html_table()
pres_race_results <- pres_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(pct_election_day) %>%
select(name, pct_election_day)
pres_race_results <- pres_race_results[[1]] %>%
clean_names()
View(pres_race_results)
pres_race_results <- pres_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number))
pres_race_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html"
#read in results as html table
pres_race_results <- pres_race_results %>%
read_html() %>%
html_table()
pres_race_results <- pres_race_results[[1]] %>%
clean_names() %>%
mutate(across(c(3,4,5,7,8), parse_number)) %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
slice(-7) %>%
arrange(pct_election_day) %>%
select(name, pct_election_day)
pres_race_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html"
#read in results as html table
pres_race_results <- pres_race_results %>%
read_html() %>%
html_table()
pres_race_results <- pres_race_results[[1]] %>%
clean_names() %>%
mutate(pct_election_day = round(election_day/total*100,2)) %>%
arrange(pct_election_day) %>%
select(name, pct_election_day)
pres_race_results <- pres_race_results[[1]] %>%
clean_names()
View(pres_race_results)
# read in the html
results <- sboe_url %>%
read_html()
# read in the html
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html()
# display the html below
results
# read in the html
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html()
# display the html below
results
# read in the html and extract all the tables
results <- sboe_url %>%
read_html() %>%
html_table()
# read in the html and extract all the tables
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# show the dataframe
results
# read in the html
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html()
# display the html below
results
# read in the html and extract all the tables
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# show the dataframe
results
# Read in all html from table, store all tables on page as nested list of dataframes.
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# Just keep the first dataframe in our list
results <- results[[1]]
# show the dataframe
results
# Read in all html from table, store all tables on page as nested list of dataframes.
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# Just keep the first dataframe in our list
results <- results[[1]]
# show the dataframe
results
# read in the html and extract all the tables
results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# show the dataframe
results
# read in the html and extract all the tables
x20_results <- "https://elections.maryland.gov/elections/2020/results/general/gen_results_2020_4_by_county_07-1.html" %>%
read_html() %>%
html_table()
# show the dataframe
x20_results
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
view(employment_carroll)
#This dataset describes the employment overall of Carroll County, and I will sort and break that down by manufacturers and farmers. I will filter out other jobs, and then also sort by median earnings and median earnings growth since this dataset has information from previous years.
employment_carroll <- read.csv("industry_employment_carroll.csv") %>%
clean_names()
emp_carroll_clean <- employment_carroll %>%
select(industry, geography, median_earnings, median_earnings_prev, median_earnings_growth, workforce_growth) %>%
arrange(desc(median_earnings_growth))
emp_carroll_clean

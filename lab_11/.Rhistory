library(tidyverse)
baltcity_income<- read_csv("https://raw.githubusercontent.com/wellsdata/data_journalism_class/main/04_labs/lab_05/pre_lab_05/baltcity_income_clean.csv") %>%
as.data.frame()
View(baltcity_income)
baltcity_income %>%
mutate(pct_whole = sum(x2020)/x2020)
arrange(desc(pct_whole))
baltcity_income %>%
mutate(pct_whole == sum(x2020)/x2020)
baltcity_income %>%
mutate(pct_whole = (sum(x2020)/x2020))
arrange(desc(pct_whole))
baltcity_income %>%
mutate(pct_whole = x2020/sum(x2020))
arrange(desc(pct_whole))
baltcity_income %>%
mutate(pct_whole = x2020/sum(x2020))
#arrange(desc(pct_whole))
baltcity_income %>%
mutate(pct_whole = row/sum(x2020))
baltcity_income<- read_csv("https://raw.githubusercontent.com/wellsdata/data_journalism_class/main/04_labs/lab_05/pre_lab_05/baltcity_income_clean.csv") %>%
as.data.frame() %>%
clean_names()
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole = (x2020/total_2020)*100)
arrange(desc(pct_whole))
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole == (x2020/total_2020)*100)
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole = (x2020/total_2020)*100)
arrange(desc(pct_whole))
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole = (x2020/total_2020)*100) %>%
arrange(desc(pct_whole))
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole = (x2020/total_2020)*100)
arrange(desc(pct_whole))
baltcity_income_2020 <- baltcity_income %>%
select(Neighborhood,Census,x2020) %>%
mutate(total_2020 = sum(x2020, na.rm=TRUE)) %>%
mutate(pct_whole = (x2020/total_2020)*100)
slice_max(pct_whole)
install.packages("tidycensus")
library(tidyverse)
library(tidycensus)
library(janitor)
census_api_key("0af029162c4342f7864ea538f47dbb9059bf9b4f", install=TRUE, overwrite = TRUE)
`readRenviron("~/.Renviron")`
census_api_key("0af029162c4342f7864ea538f47dbb9059bf9b4f", install=TRUE, overwrite = TRUE)
library(tidyverse)
library(janitor)
tidycensus
library(tidyverse)
library(janitor)
#tidycensus
library(tidycensus)
census_api_key("722bf10929642476c1bbc5bb3686acf2a7d02929", install=TRUE)
census_api_key("722bf10929642476c1bbc5bb3686acf2a7d02929", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
###
# Load ACS variables
###
acs_vars <- load_variables("acs5")
census_api_key("722bf10929642476c1bbc5bb3686acf2a7d02929", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
###
# Load ACS variables
###
acs_vars <- load_variables("acs5")
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year = 2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020)
library(tidyverse)
library(janitor)
#tidycensus
library(tidycensus)
census_api_key("722bf10929642476c1bbc5bb3686acf2a7d02929", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year = 2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020)
library(tidyverse)
library(janitor)
#tidycensus
library(tidycensus)
census_api_key("423292f0a0d4b5f0fe4ce722f283f6af07c21c84", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year = 2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B19013_001"),
state = "MD",
year = 2020)
View(md)
View(acs_vars)
View(md)
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year = 2020)
###
# Get median household income for Maryland 2020
###
x2020_south_american <- get_acs(geography = "state",
variables = c(median_income = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(median_income = "B19013_001"),
year = 2010)
###
# Load ACS variables
###
acs_vars <- load_variables("acs5", year = 2020)
###
# Get median household income for Maryland 2020
###
md <- get_acs(geography = "county",
variables = c(median_income = "B03001_016"),
state = "MD",
year = 2010)
#get data
x2020_south_american <- get_acs(geography = "state",
variables = c(median_income = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(median_income = "B19013_001"),
year = 2010)
#join dataframes
View(x2010_south_american)
View(x2020_south_american)
#get data
x2020_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2010)
#join dataframes
View(x2010_south_american)
View(x2020_south_american)
#get data
x2020_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2010)
#join dataframes
south_american_total <- x2020_south_american %>%
inner_join(x2010_south_american, by="GEOID")
View(south_american_total)
#get data
x2020_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2010)
#join dataframes
south_american_total <- x2020_south_american %>%
inner_join(x2010_south_american, by="GEOID")
#calculate increase in Hispanic pop with South American origins
south_american_total %>%
select(NAME.x, variable.x, estimate.x, estimate.y) %>%
mutate(pct_change = ((estimate.x-estimate.y)/estimate.x)*100) %>%
arrange(desc(pct_change))
#get data
x2020_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2020)
x2010_south_american <- get_acs(geography = "state",
variables = c(hispanic_pop = "B19013_001"),
year = 2010)
#join dataframes
south_american_total <- x2020_south_american %>%
inner_join(x2010_south_american, by="GEOID")
#calculate increase in Hispanic pop with South American origins
south_american_total %>%
select(NAME.x, variable.x, estimate.x, estimate.y) %>%
mutate(pct_change = ((estimate.y-estimate.x)/estimate.x)*100) %>%
arrange(desc(pct_change))
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
x2010_emp_insurance <- get_acs(geography="state",
variables = c(emp_coverage = "C27004_001"),
year = 2010)
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
x2010_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2010)
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
x2010_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2010)
View(x2020_emp_insurance)
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
x2015_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2015)
View(x2015_emp_insurance)
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
#used 2015 because for some reason 2010 data wasn't working?
x2015_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2015)
#join dataframes
emp_insurance_total <- x2020_emp_insurance %>%
inner_join(x2015_emp_insurance, join_by = "GEOID")
emp_insurance_total <- x2020_emp_insurance %>%
inner_join(x2015_emp_insurance, by = "GEOID")
View(emp_insurance_total)
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
#used 2015 because for some reason 2010 data wasn't working?
x2015_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2015)
#join dataframes
emp_insurance_total <- x2020_emp_insurance %>%
inner_join(x2015_emp_insurance, by = "GEOID")
#make pct_change and also arrange desc
emp_insurance_total %>%
select(NAME.x, estimate.x, estimate.y)
mutate(pct_change = ((estimate.y-estimate.x)/estimate.x)*100) %>%
arrange(desc(pct_change))
nge desc
emp_insurance_total %>%
select(NAME.x, estimate.x, estimate.y)
mutate(pct_change = ((estimate.y - estimate.x)/estimate.x)*100) %>%
arrange(desc(pct_change))
#get data
x2020_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2020)
#used 2015 because for some reason 2010 data wasn't working?
x2015_emp_insurance <- get_acs(geography = "state",
variables = c(emp_coverage = "C27004_001"),
year = 2015)
#join dataframes
emp_insurance_total <- x2020_emp_insurance %>%
inner_join(x2015_emp_insurance, by = "GEOID")
#make pct_change and also arrange desc
emp_insurance_total %>%
select(NAME.x, estimate.x, estimate.y)
mutate(pct_change = ((estimate.y - estimate.x)/estimate.x)*100) %>%
arrange(desc(pct_change))
#make pct_change and also arrange desc
emp_insurance_total %>%
mutate(pct_change = ((estimate.y - estimate.x)/estimate.x)*100) %>%
arrange(desc(pct_change))

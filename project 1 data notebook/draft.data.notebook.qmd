How does median household income and education correlate, specifically through graduation rates in Baltimore City and scores in English language exams?

Let's start with some background:
Household median income is essentially the median income of a certain area, or GEOID, in a city, state or community. By comparing the GEOIDs of areas with with the highest and lowest median income, different racial demographics and education of residents, one could determine if there is a correlation between the three factors. Historically, districts have been redrawn -- in a process known as redlining -- to ensure that some areas had a larger white population than others. While this is now an illegal process, some of its effects may still be felt today -- especially in Baltimore. This data analysis could be used to see if some effects of redlining are still seen, especially in the thought that it could institutionally disadvantage some races of people rather than others. 

Let's load our packages:

```{r}
#load janitor, tidyverse and formattable
library(janitor)
library(tidyverse)
library(formattable)
```
Next, let's load our first sets of data. 
```{r}
#load baltimore race data and baltimore income data
baltcity_race <- read_csv("baltcity_race_8_13.csv")
baltcity_income <- read_csv("baltcity_income_clean.csv")
x2020_dropout_rate <- read_csv("Annual_Dropout_Rate_2020.csv")
x2020_grade_enrollment <- read_csv("Enrollment_By_Grade_2020.csv")
x2020_english_scores <- read_csv("2020_ELPA2_Summary.csv")
x2020_diplomas_certificates <- read_csv("2020_Diplomas_and_Certificates.csv")
```
I also want to load data received from the state, which describes students enrolled and students who attended schools in Baltimore City. 
```{r}
#load students attended grades 1-5, grades 6-8 and also official enrollment in same grades
baltcity_attend_15 <- read_csv("Number_of_Students_Ever_Attended_1st_-_5th_Grade.csv")
baltcity_attend_68 <- read_csv("Number_of_Students_Ever_Attended_6th_-_8th_Grade.csv")
baltcity_enrolled_68 <- read_csv("Number_of_Students_Officially_Enrolled_in_6th_-_8th_Grade.csv")
baltcity_enrolled_15 <- read_csv("Number_of_Students_Officially_Enrolled_in_1st_-_5th_Grade.csv")
```
In order to combine these two data sets, I have to rename some columns. 
```{r}
#rename enrollment data to match the same names
baltcity_enroll_681 <- baltcity_enrolled_68 %>% 
  rename(x11_enroll = menrol11) %>% 
  rename(x12_enroll = menrol12) %>% 
  rename(x13_enroll = menrol13) %>% 
  rename(x14_enroll = menrol14) %>% 
  rename(x15_enroll = menrol15) %>% 
  rename(x16_enroll = menrol16) %>% 
  rename(x17_enroll = menrol17) %>% 
  rename(x19_enroll = menrol19) %>% 
  rename(x20_enroll = menrol20) %>% 
  rename(x21_enroll = menrol21) %>% 
  mutate(category = "middle")


baltcity_enroll_151 <- baltcity_enrolled_15 %>% 
  rename(x11_enroll = eenrol11) %>% 
  rename(x12_enroll = eenrol12) %>% 
  rename(x13_enroll = eenrol13) %>% 
  rename(x14_enroll = eenrol14) %>% 
  rename(x15_enroll = eenrol15) %>% 
  rename(x16_enroll = eenrol16) %>% 
  rename(x17_enroll = eenrol17) %>% 
  rename(x19_enroll = eenrol19) %>% 
  rename(x20_enroll = eenrol20) %>% 
  rename(x21_enroll = eenrol21) %>% 
  mutate(category = "elementary")

view(baltcity_enroll_151)
view(baltcity_enroll_681)
```

```{r}
#change the column names in the attending spreadsheets to match
baltcity_attend_151 <- baltcity_attend_15 %>% 
  rename(x10_attend = eattend10) %>%
  rename(x11_attend = eattend11) %>% 
  rename(x12_attend = eattend12) %>% 
  rename(x13_attend = eattend13) %>% 
  rename(x14_attend = eattend14) %>% 
  rename(x15_attend = eattend15) %>% 
  rename(x16_attend = eattend16) %>% 
  rename(x17_attend = eattend17) %>% 
  rename(x19_attend = eattend19) %>% 
  rename(x20_attend = eattend20) %>% 
  rename(x21_attend = eattend21) %>% 
  mutate(category = "elementary")

baltcity_attend_681 <- baltcity_attend_68 %>% 
  rename(x10_attend = mattend10) %>% 
  rename(x11_attend = mattend11) %>%
  rename(x12_attend = mattend12) %>%
  rename(x13_attend = mattend13) %>%
  rename(x14_attend = mattend14) %>%
  rename(x15_attend = mattend15) %>%
  rename(x16_attend = mattend16) %>%
  rename(x17_attend = mattend17) %>%
  rename(x19_attend = mattend19) %>%
  rename(x20_attend = mattend20) %>%
  rename(x21_attend = mattend21) %>%
  mutate(category = "middle")


view(baltcity_attend_151)
view(baltcity_attend_681)

#if have time, check back and see if can make pivots + make everything in the same code block so there's not 8 bajillion different data frames -- 
#df_reordered <- df %>%
 # select(B, C, A)

```

Now, we're going to combine the two attending and official enrollment spreadsheets. These are divided by year, and will be able to give us a picture of 1st through 8th grade with attendance and official enrollment.
```{r}
#ask if there's a way to combine rows as well, or create a totals row? how does one add that?
baltcity_attendance <- rbind(baltcity_attend_151, baltcity_attend_681)
baltcity_enrollment <- rbind(baltcity_enroll_151, baltcity_enroll_681)

baltcity_attend_totals <- baltcity_attendance %>% 
 select(where(is.numeric)) %>% 
  colSums() %>% 
  as.data.frame()
baltcity_enroll_totals <- baltcity_enrollment %>% 
  select(where(is.numeric)) %>% 
  colSums() %>% 
  as.data.frame()
  

#baltcityatt_with_totals <- baltcity_attend_totals %>%
 #select(where(is.numeric)) %>% 
  #adorn_totals() %>% 
  #adorn_totals("col", name=Totals, where = "bottom") %>% 
  #adorn_totals("col", totals)

#baltcityenroll_with_totals <- baltcity_enroll_totals %>% 
 #select(where(is.numeric)) %>% 
  #adorn_totals() %>% 
  #adorn_totals("col", name=Totals, where = "bottom") %>% 
  #adorn_totals("col", totals)

#baltcityenroll_with_totals <- janitor::adorn_totals(baltcity_enroll_totals)

view(baltcity_attendance)
view(baltcity_enrollment)
```

Now that the data is prepared, it's time to answer some questions. 

What is the total attendance for students from 1-8 grade in Baltimore City from 2011 to 2021?
```{r}
#493,664 students from 1st to 8th grade attended school in Baltimore City from 2011 to 2021. Note: data is missing count for 2018, excluded 2010 in sum to match up with enrollment data.
baltcity_attendance %>% 
  select(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend) %>% 
  mutate(num_attendance = (sum(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))

```
How many students enrolled? 
```{r}
#475,982 students were enrolled in schools in Baltimore City from 2011 to 2021. Note: missing data from 2018. 
baltcity_enrollment %>% 
  select(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll) %>% 
 mutate(num_enrollment=(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll)))
```

What areas have the highest median household income?
```{r}
#get the top 20 neighborhoods with the highest median income in 2020
top20_baltcity_income <- baltcity_income %>% 
  select(Neighborhood, x2020, Census, GEOID) %>% 
  slice_max(x2020, n=20)

view(top20_baltcity_income)

```

What about the lowest?
```{r}
low20_baltcity_income <- baltcity_income %>% 
  select(Neighborhood, x2020, Census, GEOID) %>% 
  slice_min(x2020, n=20)

view(low20_baltcity_income)
```
Let's grab the locations in the city with the top 
```{r}
#cross reference that with the top 20 places with the most white population
top20_white <- baltcity_race %>% 
  select(geoid, census_tract,x2020_white) %>% 
  slice_max(x2020_white, n=20)

view(top20_white)
```
Also, let's grab the lowest 20 white population.
```{r}
low20_white <- baltcity_race %>% 
  select(geoid, census_tract,x2020_white) %>% 
  slice_min(x2020_white, n=20)

view(low20_white)
```

Some of these GEOIDs match up to be both the whitest and with the highest median incomes, such as Highlandtown. 

How does this compare to schools with the highest graduation rates? Do schools in the areas with the highest white populations have higher graduation rates?
#comparing geoid to match up areas
```{r}
#Filter x2020_diplomas_certificates for Baltimore City, then check on geoids of the schools with the highest graduation rates
baltcity_grads <- x2020_diplomas_certificates %>% 
  filter(`LSS Name`== "Baltimore City") %>% 
  select(`LSS Name`,`School Name`, `Total HS Completers`) %>% 
 slice_max(`Total HS Completers`, n=20)

view(baltcity_grads)

```

Using this information, let's cross reference the geoids of schools in the top 20 with the geoids of the wealthiest and highest in white population at https://data.imap.maryland.gov/datasets/bbe7d09a81fc40c8a7c9f4c80155842e/explore.
#write findings here

How are English Language scores in Baltimore City? Is there a specific school that has the lowest scores, and in what area of the city is that located? Do students who speak another language get the help they need for high school graduation? 

```{r}
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>% 
  filter(`LSS Name`=="Baltimore City") %>% 
  select(`School Name`, `Proficient Count`,) %>% 
  slice_max(`Proficient Count`, n=20)
#help this isn't actually ordering in descending order and also slicemax isn't working

view(x2020_baltcity_english_scores)

#crosscheck geoid of these schools with data.imap.maryland.gov link above!

```

What race of people are most affected by findings? 
#redlining -- is there a map where this can be found too? 

```{r}


```

How does this compare to other metropolitan cities statewide? In the country?
```{r}

```


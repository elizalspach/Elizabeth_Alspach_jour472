top_12_dispo <- as.data.frame(all_dispo) %>%
slice_max(all_dispo, n=12)
library(tidyverse)
SF <- read_csv("SF_311.csv")
#This cleans column names
SF <- janitor::clean_names(SF)
#This processes dates for analysis
SF$call_date2 <- as.Date(SF$call_date)
SF$call_date2 <- lubridate::mdy(SF$call_date)
#This creates a new column for year
SF$year <- lubridate::year(SF$call_date2)
glimpse(SF)
years %>%
ggplot() +
geom_bar(aes(x=reorder(year, n), weight=n)) +
coord_flip() +
theme_minimal() +
theme_economist()
#ask if there's a way to combine rows as well, or create a totals row? how does one add that?
baltcity_attendance <- rbind(baltcity_attend_151, baltcity_attend_681)
baltcity_enrollment <- rbind(baltcity_enroll_151, baltcity_enroll_681)
baltcity_attend_totals <- baltcity_attendance %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcity_enroll_totals <- baltcity_enrollment %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcityatt_with_totals <- baltcity_attend_totals %>%
select(where(is.numeric)) %>%
adorn_totals("row") %>%
adorn_totals("col", name=Totals, where = "bottom") %>%
adorn_totals("col", totals)
#cross reference that with the top 20 places with the most white population
top20_white <- baltcity_race %>%
select(x2020_white, geoid, census_tract) %>%
slice_max(x2020_white, n=20)
view(top20_white)
#cross reference that with the top 20 places with the most white population
top20_white <- baltcity_race %>%
select(geoid, census_tract,x2020_white) %>%
slice_max(x2020_white, n=20)
view(top20_white)
#now to cross check with geoids, but also check on selecting certain formats here
x2020_baltcity_dip_cert <- x2020_diplomas_certificates %>%
filter(`LSS Name`== "Baltimore City") %>%
slice_max(`Total HS Completers`, n=20)
view(x2020_baltcity_dip_cert)
baltcity_attendance %>%
mutate(category = percent(sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)
baltcity_attendance %>%
mutate(category = percent(sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11))
baltcity_attendance %>%
mutate(category = (sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11))
baltcity_attendance %>%
mutate(category = ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend))/11)
baltcity_attendance %>%
mutate(category = ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11))
baltcity_attendance %>%
mutate(category = ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(category = pct_attendance((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance == ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance ==((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(category = pct_attendance = ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(category = pct_attendance ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance = ((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
#ask if there's a way to combine rows as well, or create a totals row? how does one add that?
baltcity_attendance <- rbind(baltcity_attend_151, baltcity_attend_681)
baltcity_enrollment <- rbind(baltcity_enroll_151, baltcity_enroll_681)
baltcity_attend_totals <- baltcity_attendance %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcity_enroll_totals <- baltcity_enrollment %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcityatt_with_totals <- baltcity_attend_totals %>%
select(where(is.numeric)) %>%
adorn_totals() %>%
adorn_totals("col", name=Totals, where = "bottom") %>%
adorn_totals("col", totals)
#ask if there's a way to combine rows as well, or create a totals row? how does one add that?
baltcity_attendance <- rbind(baltcity_attend_151, baltcity_attend_681)
baltcity_enrollment <- rbind(baltcity_enroll_151, baltcity_enroll_681)
baltcity_attend_totals <- baltcity_attendance %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcity_enroll_totals <- baltcity_enrollment %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcityatt_with_totals <- baltcity_attend_totals %>%
select(where(is.numeric)) %>%
adorn_totals()
baltcity_attendance %>%
mutate(pct_attendance = percent(x10_attend + x11_attend + x12_attend + x13_attend + x14_attend + x15_attend, x16_attend + x17_attend + x19_attend + x20_attend + x21_attend))
baltcity_attendance %>%
mutate(pct_attendance = percent(x10_attend + x11_attend + x12_attend + x13_attend + x14_attend + x15_attend, x16_attend + x17_attend + x19_attend + x20_attend + x21_attend)/11)
baltcity_attendance %>%
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
select(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
select(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/11)))
baltcity_attendance %>%
mutate(pct_attendance = percent((sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)/22)))
baltcity_attendance %>%
mutate(pct_attendance = (sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))
baltcity_attendance %>%
mutate(num_attendance = (sum(x10_attend, x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))
View(baltcity_enrollment)
#545,177 students from 1st to 8th grade attended school in Baltimore City from 2011 to 2021. Note: data is missing count for 2018, excluded 2010 to match up with enrollment data.
baltcity_attendance %>%
mutate(num_attendance = (sum(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))
baltcity_enrollment %>%
(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll)))
baltcity_enrollment %>%
(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll))
baltcity_enrollment %>%
(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll))
baltcity_enrollment %>%
mutate(num_enrollment=(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll)))
#cross reference that with the top 20 places with the most white population
top20_white <- baltcity_race %>%
select(geoid, census_tract,x2020_white) %>%
slice_max(x2020_white, n=20)
#493,664 students from 1st to 8th grade attended school in Baltimore City from 2011 to 2021. Note: data is missing count for 2018, excluded 2010 in sum to match up with enrollment data.
baltcity_attendance %>%
select(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)
mutate(num_attendance = (sum(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))
#493,664 students from 1st to 8th grade attended school in Baltimore City from 2011 to 2021. Note: data is missing count for 2018, excluded 2010 in sum to match up with enrollment data.
baltcity_attendance %>%
select(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend) %>%
mutate(num_attendance = (sum(x11_attend, x12_attend, x13_attend, x14_attend, x15_attend, x16_attend, x17_attend, x19_attend, x20_attend, x21_attend)))
#475,982 students were enrolled in schools in Baltimore City from 2011 to 2021. Note: missing data from 2018.
baltcity_enrollment %>%
select(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll) %>%
mutate(num_enrollment=(sum(x11_enroll, x12_enroll, x13_enroll, x14_enroll, x15_enroll, x16_enroll, x17_enroll, x19_enroll, x20_enroll, x21_enroll)))
View(x2020_english_scores)
x2020_baltcity_english_scoresx2020_english_scores %>%
filter(`LSS Name`="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`)
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`)
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`)
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`)
view(x2020_baltcity_english_scores)
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`, n=20)
view(x2020_baltcity_english_scores)
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
arrange(desc(`\`Proficient Count\``))
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
arrange(desc(`Proficient Count`))
view(x2020_baltcity_english_scores)
#cross reference that with the top 20 places with the most white population
top20_white <- baltcity_race %>%
select(geoid, census_tract,x2020_white) %>%
slice_max(x2020_white, n=20)
view(top20_white)
#ask if there's a way to combine rows as well, or create a totals row? how does one add that?
baltcity_attendance <- rbind(baltcity_attend_151, baltcity_attend_681)
baltcity_enrollment <- rbind(baltcity_enroll_151, baltcity_enroll_681)
baltcity_attend_totals <- baltcity_attendance %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
baltcity_enroll_totals <- baltcity_enrollment %>%
select(where(is.numeric)) %>%
colSums() %>%
as.data.frame()
#baltcityatt_with_totals <- baltcity_attend_totals %>%
#select(where(is.numeric)) %>%
#adorn_totals() %>%
#adorn_totals("col", name=Totals, where = "bottom") %>%
#adorn_totals("col", totals)
#baltcityenroll_with_totals <- baltcity_enroll_totals %>%
#select(where(is.numeric)) %>%
#adorn_totals() %>%
#adorn_totals("col", name=Totals, where = "bottom") %>%
#adorn_totals("col", totals)
baltcityenroll_with_totals <- janitor::adorn_totals(baltcity_enroll_totals)
#Filter x2020_diplomas_certificates for Baltimore City, then check on geoids of the schools with the highest graduation rates
baltcity_grads <- x2020_diplomas_certificates %>%
filter(`LSS Name`== "Baltimore City") %>%
select(`LSS Name`,`School Name`, `Total HS Completers`) %>%
slice_max(`Total HS Completers`, n=20)
view(baltcity_grads)
#get the top 20 neighborhoods with the highest median income in 2020
baltcity_income %>%
select(neighborhood, x2020, census, GEOID) %>%
slice_max(x2020, n=20)
#get the top 20 neighborhoods with the highest median income in 2020
baltcity_income %>%
select(Neighborhood, x2020, census, GEOID) %>%
slice_max(x2020, n=20)
#get the top 20 neighborhoods with the highest median income in 2020
baltcity_income %>%
select(Neighborhood, x2020, census, GEOID) %>%
slice_max(x2020, n=20)
#get the top 20 neighborhoods with the highest median income in 2020
baltcity_income %>%
select(Neighborhood, x2020, Census, GEOID) %>%
slice_max(x2020, n=20)
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
arrange(desc(`Proficient Count`))
#help this isn't actually ordering in descending order and also slicemax isn't working
view(x2020_baltcity_english_scores)
#crosscheck geoid of these schools with data.imap.maryland.gov link above!
#get the top 20 neighborhoods with the highest median income in 2020
top20_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census, GEOID) %>%
slice_max(x2020, n=20)
#get the top 20 neighborhoods with the highest median income in 2020
top20_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census, GEOID) %>%
slice_max(x2020, n=20)
view(top20_baltcity_income)
low20_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census, GEOID) %>%
slice_min(x2020, n=20)
view_low20_baltcity_income
low20_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census, GEOID) %>%
slice_min(x2020, n=20)
view(low20_baltcity_income)
low20_white <- baltcity_race %>%
select(geoid, census_tract,x2020_white) %>%
slice_min(x2020_white, n=20)
view(low20_white)
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_min(`Proficient Count`))
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_min(`Proficient Count`)
#help this isn't actually ordering in descending order and also slicemax isn't working
view(x2020_baltcity_english_scores)
#crosscheck geoid of these schools with data.imap.maryland.gov link above!
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`, n=20)
#help this isn't actually ordering in descending order and also slicemax isn't working
view(x2020_baltcity_english_scores)
#crosscheck geoid of these schools with data.imap.maryland.gov link above!
#load janitor, tidyverse and formattable
library(janitor)
library(tidyverse)
library(formattable)
#load janitor, tidyverse and formattable
library(janitor)
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggthemes)
#load baltimore race data and baltimore income data
#load md english scores, grade enrollment, dropout rate and diplomas certificates
baltcity_race <- read_csv("baltcity_race_8_13.csv")
baltcity_income <- read_csv("baltcity_income_clean.csv")
x2020_dropout_rate <- read_csv("Annual_Dropout_Rate_2020.csv")
x2020_grade_enrollment <- read_csv("Enrollment_By_Grade_2020.csv")
x2020_english_scores <- read_csv("2020_ELPA2_Summary.csv")
x2020_diplomas_certificates <- read_csv("2020_Diplomas_and_Certificates.csv")
#get the top 20 neighborhoods with the highest median income in 2020
top20_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
slice_max(x2020, n=10)
view(top20_baltcity_income)
#get the top 10 neighborhoods with the highest median income in 2020
top10_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
slice_max(x2020, n=10)
view(top10_baltcity_income)
low10_baltcity_income <- baltcity_income %>%
select(Neighborhood, x2020, Census) %>%
slice_min(x2020, n=10)
view(low10_baltcity_income)
#cross reference that with the top 20 places with the most white population
top10_white <- baltcity_race %>%
select(census_tract,x2020_white) %>%
slice_max(x2020_white, n=10)
view(top10_white)
low10_white <- baltcity_race %>%
select(census_tract,x2020_white) %>%
slice_min(x2020_white, n=10)
view(low10_white)
#Filter x2020_diplomas_certificates for Baltimore City, then check on geoids of the schools with the highest graduation rates
baltcity_grads <- x2020_diplomas_certificates %>%
filter(`LSS Name`== "Baltimore City") %>%
select(`LSS Name`,`School Name`, `Total HS Completers`) %>%
slice_max(`Total HS Completers`, n=10)
view(baltcity_grads)
#find lowest English scores by city
x2020_baltcity_english_scores <- x2020_english_scores %>%
filter(`LSS Name`=="Baltimore City") %>%
select(`School Name`, `Proficient Count`,) %>%
slice_max(`Proficient Count`, n=10)
#help this isn't actually ordering in descending order and also slicemax isn't working
view(x2020_baltcity_english_scores)
View(x2020_dropout_rate)
view(baltcity_dropout)
baltcity_dropout <- x2020_dropout_rate %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`)
baltcity_dropout <- x2020_dropout_rate %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`)
view(baltcity_dropout)
baltcity_dropout <- x2020_dropout_rate %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
view(baltcity_dropout)
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`)
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
baltcity_dropout <- x2020_dropout_rate %>%
#select(`LSS Name`, `School Name`, `Dropout Rate Numer`)
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
view(baltcity_dropout)
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`)
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`)
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`) %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
view(baltcity_dropout)
balcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=n)) +
coord_flip() +
theme_minimal() +
theme_economist() +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`) %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
view(baltcity_dropout)
#check on this, it's not actually sorting and want to ask rob wells why
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=n)) +
coord_flip() +
theme_minimal() +
theme_economist() +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
coord_flip() +
theme_minimal() +
theme_economist() +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
theme_minimal() +
theme_economist() +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
slice_max(`Dropout Rate Numer`, n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
theme_minimal() +
theme_economist() +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
slice_max(`Dropout Rate Numer`, n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
theme_minimal() +
theme_economist() +
geom_text(aes(label=n), hjust = -.1, size = 2.5) +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
slice_max(`Dropout Rate Numer`, n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
theme_minimal() +
theme_economist() +
geom_text(aes(label=`Dropout Rate Numer`), hjust = -.1, size = 2.5) +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
slice_max(`Dropout Rate Numer`, n=10) %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
geom_text(aes(label=`Dropout Rate Numer`), hjust = -.1, size = 2.5) +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
slice_max(`Dropout Rate Numer`, n=10) %>%
ggplot() +
geom_text(aes(label=`Dropout Rate Numer`), hjust = -.1, size = 2.5) +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`)) +
labs(
title="311 Calls, San Francisco",
x = "total 311 calls",
y = "year",
caption = "source: SF PD Service Call Data, 2016-2019")
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(year, n), weight=n)) +
coord_flip() +
theme_minimal() +
theme_economist()
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, n), weight=n))
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), weight=`Dropout Rate Numer`))
baltcity_dropout %>%
ggplot() +
geom_bar(aes(x=reorder(`School Name`, `Dropout Rate Numer`), fill=`Dropout Rate Numer`))
#load janitor, tidyverse and formattable
library(janitor)
library(tidyverse)
library(formattable)
library(ggplot2)
library(ggthemes)
#load baltimore race data and baltimore income data
#load md english scores, grade enrollment, dropout rate and diplomas certificates
baltcity_race <- read_csv("baltcity_race_8_13.csv")
baltcity_income <- read_csv("baltcity_income_clean.csv")
x2020_dropout_rate <- read_csv("Annual_Dropout_Rate_2020.csv")
x2020_grade_enrollment <- read_csv("Enrollment_By_Grade_2020.csv")
x2020_english_scores <- read_csv("2020_ELPA2_Summary.csv")
x2020_diplomas_certificates <- read_csv("2020_Diplomas_and_Certificates.csv")
baltcity_dropout <- x2020_dropout_rate %>%
select(`LSS Name`, `School Name`, `Dropout Rate Numer`) %>%
filter(`LSS Name`=="Baltimore City") %>%
slice_max(`Dropout Rate Numer`, n=10)
view(baltcity_dropout)
#check on this, it's not actually sorting and want to ask rob wells why

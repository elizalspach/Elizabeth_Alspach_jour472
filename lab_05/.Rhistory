knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
library(tidyverse)
library(janitor)
library(formattable)
read_csv(CDC_Life_Census_Tract_2010_2015.csv)
library(readr)
CDC_Life_Census_Tract_2010_2015 <- read_csv("CDC_Life_Census_Tract_2010_2015.csv")
View(CDC_Life_Census_Tract_2010_2015)
library(readr)
CDC_Life_Census_Tract_2010_2015 <- read_csv("CDC_Life_Census_Tract_2010_2015.csv")
View(CDC_Life_Census_Tract_2010_2015)
library(readr)
US_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
view(dataframe)
library(readr)
US_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
view.dataframe()
library(readr)
US_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
#tidyverse and janitor loaded code lines 27-28, spreadsheet loaded as data frame in 49-51
nrow(us_death) %>%
clean_names(US_death)
library(readr)
US_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
#tidyverse and janitor loaded code lines 27-28, spreadsheet loaded as data frame in 49-51
nrow(us_death) %>%
clean_names(US_death)
#tidyverse and janitor loaded code lines 27-28, spreadsheet loaded as data frame in 49-51
nrow(US_death) %>%
clean_names(US_death)
library(readr)
us_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
#tidyverse and janitor loaded code lines 27-28, spreadsheet loaded as data frame in 49-51
nrow(us_death, na.rm = TRUE)
#tidyverse and janitor loaded in lines 27-28
us_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
summary(us_death, na.rm=TRUE)
library(readr)
us_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
view(us_death)
#tidyverse and janitor loaded in lines 27-28
us_death <- read_csv("CDC_Life_Census_Tract_2010_2015.csv") %>%
as.data.frame()
summary(us_death, na.rm=TRUE) %>%
view(us_death)
md_death <- us_death %>%
filter(State == "Maryland", na.rm=TRUE)
md_death <- us_death %>%
filter(State == "Maryland", na.rm=TRUE)
view(md_death)
#tidyverse and janitor loaded in lines 27-28, data loaded in lines 49-51
us_death %>%
nrow() %>%
us_death_na <- na.omit(us_death)
#tidyverse and janitor loaded in lines 27-28, data loaded in lines 49-51
us_death %>%
nrow()
us_death_na <- na.omit(us_death)
md_death <- us_death %>%
filter(State == "Maryland", na.rm=TRUE)
view(md_death)
md_death <- us_death_na %>%
filter(State == "Maryland", na.rm=TRUE)
view(md_death)
#filtered according to Baltimore City into a third table called balt_death
md_death <- balt_death %>%
filter(county == "Baltimore City,Maryland")
#filtered according to Baltimore City into a third table called balt_death
md_death <- balt_death %>%
filter(county == "Baltimore City, MD")
#filtered according to Baltimore City into a third table called balt_death
md_death <- balt_death %>%
filter(county == "Baltimore city, MD")
#filtered according to Baltimore City into a third table called balt_death
md_death <- balt_death %>%
filter(County == "Baltimore city, MD")
#filtered according to Baltimore City into a third table called balt_death
balt_death <- md_death %>%
filter(County == "Baltimore city, MD")
#filtered according to Baltimore City into a third table called balt_death
balt_death <- md_death %>%
filter(County == "Baltimore city, MD")
view(balt_death)
#tidyverse and janitor loaded in lines 27-28, data loaded in lines 49-51
#cleaned us_death data
us_death %>%
nrow()
us_death_clean <- na.omit(us_death)
#filtered clean data into a second table titled md_death
md_death <- us_death_clean %>%
filter(State == "Maryland", na.rm=TRUE)
view(md_death)
#filtered according to Baltimore City into a third table called balt_death
balt_death <- md_death %>%
filter(County == "Baltimore city, MD")
view(balt_death)
#load balt_death_census data
library(readr)
balt_death2 <- read_csv("balt_death_census.csv")
View(balt_death2)
balt_death2 %>%
summary(balt_death2$life.expectancy)
#load balt_death_census data
library(readr)
balt_death2 <- read_csv("balt_death_census.csv")
View(balt_death2)
summary(balt_death2$life.expectancy)
summary(balt_death2$life_expectancy)
#show neighborhoods with life expectancy rate below the first quartile, arranged in ascending order
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy => 69.58)
#show neighborhoods with life expectancy rate below the first quartile, arranged in ascending order
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58)
#show neighborhoods with life expectancy rate below the first quartile, arranged in ascending order
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58) %>%
arrange()
#show neighborhoods with life expectancy rate below the first quartile, arranged in ascending order
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58) %>%
arrange(life_expectancy)
md_death %>%
summary(md_death$`Life Expectancy`)
#summary statistics of the state of Maryland life expectancy rate
md_death %>%
summary(md_death$Life.Expectancy)
#summary statistics of the state of Maryland life expectancy rate
summary(md_death$Life.Expectancy)
#summary statistics of the state of Maryland life expectancy rate
summary(md_death$Life.Expectancy)
#summary statistics of the state of Maryland life expectancy rate
md_death %>%
summary(md_death$Life.Expectancy)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(county, Life.Expectancy) %>%
slice_min(Life.Expectancy, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, Life.Expectancy) %>%
slice_min(Life.Expectancy, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, 'Life Expectancy') %>%
slice_min(Life.Expectancy, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, Life.Expectancy) %>%
slice_min(Life.Expectancy, n = 20)
#summary statistics of the state of Maryland life expectancy rate
md_death %>%
summary(md_death$Life.Expectancy)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, Life.Expectancy) %>%
slice_min(Life.Expectancy, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, Life Expectancy) %>%
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, `Life Expectancy`) %>%
slice_min(Life.Expectancy, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, `Life Expectancy`) %>%
slice_min(`Life Expectancy`, n = 20)
#produce a table with the 20 communities with the lowest life expectancy
md_lowest <- md_death %>%
select(County, `Life Expectancy`) %>%
slice_min(`Life Expectancy`, n = 20)
view(md_lowest)
#produce a table with the 20 communities with the highest life expectancy
md_highest <- md_death %>%
select(County, `Life Expectancy`) %>%
slice_max(`Life Expectancy`, n = 20)
view(md_highest)
#life expectancy rating in the nation
nation_highest <- us_death_clean %>%
select(state, `Life Expectancy`) %>%
slice_max(`Life Expectancy`)
View(us_death_clean)
#life expectancy rating in the nation
nation_highest <- us_death_clean %>%
select(State, `Life Expectancy`) %>%
slice_max(`Life Expectancy`)
view(nation_highest)
#life expectancy rating in the nation
nation_highest <- us_death_clean %>%
select(State, `Life Expectancy`) %>%
slice_max(`Life Expectancy`, n = 20)
view(nation_highest)
#life expectancy rating in the nation
nation_highest <- us_death_clean %>%
select(State, County, `Life Expectancy`) %>%
slice_max(`Life Expectancy`, n = 20)
view(nation_highest)
nation_lowest <- us_death_clean %>%
select(State, County, `Life Expectancy`) %>%
slice_min(`Life Expectancy`, n = 20)
view(nation_lowest)
#summary stats of nation life expectancy rate
us_death_clean %>%
summary(us_death_clean$`Life Expectancy`)
#baltimore average life expectancy
summary(balt_death$`Life Expectancy`)
#number of census tracts above or below
balt_death %>%
mutate(
category = case_when(
`Life Expectancy` => '73.04' ~ "above",
#number of census tracts above or below
balt_death <- balt_death %>%
mutate(
category = case_when(
`Life Expectancy` => '73.04' ~ "above",
#number of census tracts above or below
balt_death <- balt_death %>%
mutate(
category = case_when(
`Life Expectancy` >= '73.04' ~ "above",
`Life Expectancy` <= '73.04' ~ "below",
)
#number of census tracts above or below
balt_death <- balt_death %>%
mutate(
category = case_when(
`Life Expectancy` >= '73.04' ~ "above",
`Life Expectancy` <= '73.04' ~ "below",
)
view(balt_death)
#number of census tracts above or below
balt_death_above_below <- balt_death %>%
mutate(
category = case_when(
`Life Expectancy` >= '73.04' ~ "above",
`Life Expectancy` <= '73.04' ~ "below",
)
view(balt_death_above_below)
balt_death_above <- balt_death_above_below %>%
mutate(above == (category=above))
balt_death_above <- balt_death_above_below %>%
mutate(above = (category=above))
balt_death_above <- balt_death_above_below %>%
mutate(above = (category==above))
summary(balt_death_above_below)
ncount(above)
filter(`Life Expectancy`$category=above)
#number of census tracts above or below
balt_death_above_below <- balt_death %>%
mutate(
category = case_when(
`Life Expectancy` >= '73.04' ~ "above",
`Life Expectancy` <= '73.04' ~ "below",
)
view(balt_death_above_below)
#numbers of above or below
value_counts <- death %>%
count(category)
#numbers of above or below
value_counts <- balt_death_above_below %>%
count(category)
print(value_counts)

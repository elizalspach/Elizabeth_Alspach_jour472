#install.packages('sf')
#install.packages('leaflet')
library(tidyverse)
library(janitor)
library(sf)
library(leaflet)
pg_elementary_school_locations <- read_rds("assets/data/pg_elementary_school_locations.rds")
pg_elementary_school_locations <- read_rds("assets/pg_elementary_school_locations.rds")
pg_elementary_school_locations
ggplot() +
geom_sf(data=pg_elementary_school_locations)
pg_county <- read_rds("assets/pg_county.rds")
ggplot() +
geom_sf(data=pg_county) +
geom_sf(data=pg_elementary_school_locations)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addCircles(data=pg_elementary_school_locations)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data=pg_county) %>%
addCircles(data=pg_elementary_school_locations)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data=pg_county) %>%
addCircles(data=pg_elementary_school_locations,
label=pg_elementary_school_locations$school_name)
attendance <- read_rds("assets/attendance.rds")
attendance
attendance_locations <- attendance %>%
inner_join(pg_elementary_school_locations) %>%
st_as_sf()
ggplot() +
geom_sf(data=pg_county,fill="white") +
geom_sf(data=attendance_locations, aes(color=attend_rate_pct),size=2)
pg_tract_income <- read_rds("assets/data/pg_tract_income.rds")
pg_tract_income <- read_rds("assets/pg_tract_income.rds")
pg_tract_income
ggplot() +
geom_sf(data=pg_tract_income, aes(fill=median_household_income))
ggplot() +
geom_sf(data=pg_tract_income, aes(fill=median_household_income)) +
geom_sf(data=attendance_locations, aes(color=attend_rate_pct),size=2)
income_to_attendance <- attendance_locations %>%
st_join(pg_tract_income)
income_to_attendance
income_to_attendance %>%
mutate(attendance_bucket = ntile(attend_rate_pct,2)) %>%
mutate(attendance_bucket = case_when(
attendance_bucket == 1 ~ "low_attendance",
attendance_bucket == 2 ~ "high_attendance"
)) %>%
group_by(attendance_bucket) %>%
summarise(
median_household_income = mean(median_household_income)
)
income_to_attendance %>%
mutate(attendance_bucket = ntile(attend_rate_pct,2)) %>%
mutate(attendance_bucket = case_when(
attendance_bucket == 1 ~ "low_attendance",
attendance_bucket == 2 ~ "high_attendance"
)) %>%
group_by(attendance_bucket) %>%
summarise(
median_household_income = mean(median_household_income)
)
library(janitor)
library(tidyverse)
library(sf)
library(leaflet)
baltimore_homicides <- read_rds("data/baltimore_homicides.rds") %>%
clean_names()
baltimore_demographics <- read_rds("data/baltimore_tract_demographics.rds") %>%
clean_names()
baltimore_shapefiles <- read_rds("data/baltimore_tract_shapefiles.rds") %>%
clean_names()
#join with baltimore tracts and then baltimore homicides
majority_white_tracts <- filter_majority_white %>%
inner_join(baltimore_shapefiles) %>%
st_as_sf
#join with baltimore tracts and then baltimore homicides
majority_white_tracts <- filtered_majority_white %>%
inner_join(baltimore_shapefiles) %>%
st_as_sf
#create values for majority white areas
majority_white_balt <- baltimore_demographics %>%
mutate(pct_white = (white_pop/total_pop)*100) %>%
mutate(neighborhood_dem = case_when(
pct_white > 50 ~ "majority_white",
TRUE ~ "not_majority_white"
))
view(majority_white_balt)
#now, let's filter for majority white areas
filtered_majority_white <- majority_white_balt %>%
filter(neighborhood_dem == "majority_white")
view(filtered_majority_white)
#Join the newly created data set with baltimore tracts, and then combine taht data set with baltimore homicides.
majority_white_tracts <- filtered_majority_white %>%
inner_join(baltimore_tracts) %>%
st_as_sf
###
# Classify each tract as majority white or not
###
majority_white_tracts <- baltimore_demographics %>%
mutate(pct_white = white_pop/total_pop) %>%
mutate(neighborhood_type = case_when(
pct_white > .50 ~ "majority_white",
TRUE ~ "not_majority_white"
))
#join into the spacial data before we start making the map
majority_white_tracts <- majority_white_tracts %>%
inner_join(baltimore_tract_shapefiles) %>%
st_as_sf()
#join into the spacial data before we start making the map
majority_white_tracts <- majority_white_tracts %>%
inner_join(baltimore_shapefiles) %>%
st_as_sf()
#spatial joining
shootings_by_neighborhood <- baltimore_homicides %>%
st_join(majority_white_tracts) %>%
as_tibble()
#calculate percentage in majority white and non white neighborhoods
case_status_by_neighborhood <- shootings_by_neighborhood %>%
group_by(neighborhood_type,disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(total_shootings = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_shootings*100)
case_status_by_neighborhood
###
# Output map
###
ggplot() +
geom_sf(data=baltimore_tract_shapefiles) +
geom_sf(data=baltimore_homicides)
###
# Output map
###
ggplot() +
geom_sf(data=baltimore_shapefiles) +
geom_sf(data=baltimore_homicides)
#calculate percentage in majority white and non white neighborhoods
case_status_by_neighborhood <- shootings_by_neighborhood %>%
group_by(neighborhood_type,disposition) %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(total_shootings = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_shootings*100)
#calculate percentage in majority white and non white neighborhoods
case_status_by_neighborhood <- shootings_by_neighborhood %>%
group_by(neighborhood_type,disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(total_shootings = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_shootings*100)
case_status_by_neighborhood
baltimore_homicides <- read_rds("data/baltimore_homicides.rds") %>%
clean_names()
baltimore_demographics <- read_rds("data/baltimore_tract_demographics.rds") %>%
clean_names()
baltimore_shapefiles <- read_rds("data/baltimore_tract_shapefiles.rds") %>%
clean_names()
#create values for majority white areas
majority_white_balt <- baltimore_demographics %>%
mutate(pct_white = (white_pop/total_pop)*100) %>%
mutate(neighborhood_dem = case_when(
pct_white > 50 ~ "majority_white",
TRUE ~ "not_majority_white"
))
view(majority_white_balt)
#now, let's filter for majority white areas
filtered_majority_white <- majority_white_balt %>%
filter(neighborhood_dem == "majority_white")
view(filtered_majority_white)
library(janitor)
library(tidyverse)
library(sf)
library(leaflet)
baltimore_homicides <- read_rds("data/baltimore_homicides.rds") %>%
clean_names()
baltimore_demographics <- read_rds("data/baltimore_tract_demographics.rds") %>%
clean_names()
baltimore_shapefiles <- read_rds("data/baltimore_tract_shapefiles.rds") %>%
clean_names()
#create values for majority white areas
majority_white_balt <- baltimore_demographics %>%
mutate(pct_white = (white_pop/total_pop)*100) %>%
mutate(neighborhood_dem = case_when(
pct_white > 50 ~ "majority_white",
TRUE ~ "not_majority_white"
))
view(majority_white_balt)
#now, let's filter for majority white areas
filtered_majority_white <- majority_white_balt %>%
filter(neighborhood_dem == "majority_white")
view(filtered_majority_white)
#fixing homicides data
cases_neighborhood <- baltimore_homicides %>%
group_by(neighborhood_dem,disposition) %>%
pivot_wider()
#join into the spacial data before making the map
majority_white_tracts <- majority_white_tracts %>%
inner_join(baltimore_shapefiles) %>%
st_as_sf()
#join into the spacial data before making the map
majority_white_tracts <- majority_white_tracts %>%
st_join(baltimore_shapefiles) %>%
st_as_sf()
#spatial joining
shootings_by_neighborhood <- baltimore_homicides %>%
st_join(majority_white_tracts) %>%
as_tibble()
#calculate percentage in majority white and non white neighborhoods
case_status_by_neighborhood <- shootings_by_neighborhood %>%
group_by(neighborhood_type,disposition) %>%
count() %>%
pivot_wider(names_from=disposition, values_from=n) %>%
clean_names() %>%
mutate(total_shootings = closed_by_arrest+closed_without_arrest+open_no_arrest) %>%
mutate(unsolved = open_no_arrest + closed_without_arrest) %>%
mutate(pct_unsolved = unsolved/total_shootings*100)
case_status_by_neighborhood
###
# Output map
###
ggplot() +
geom_sf(data=baltimore_shapefiles) +
geom_sf(data=baltimore_homicides)
